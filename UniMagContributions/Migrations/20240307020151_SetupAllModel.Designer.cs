// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniMagContributions.Models;

#nullable disable

namespace UniMagContributions.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240307020151_SetupAllModel")]
    partial class SetupAllModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UniMagContributions.Models.AnnualMagazine", b =>
                {
                    b.Property<Guid>("AnnualMagazineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ClosureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinalClosureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AnnualMagazineId");

                    b.ToTable("AnnualMagazines");

                    b.HasData(
                        new
                        {
                            AnnualMagazineId = new Guid("111422e5-588a-49a5-a868-b877afb21cd0"),
                            AcademicYear = "2023-2024",
                            ClosureDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Academic Year Description",
                            FinalClosureDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sample"
                        });
                });

            modelBuilder.Entity("UniMagContributions.Models.Contribution", b =>
                {
                    b.Property<Guid>("ContributionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnnualMagazineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContributionId");

                    b.HasIndex("AnnualMagazineId");

                    b.HasIndex("UserId");

                    b.ToTable("Contributions");
                });

            modelBuilder.Entity("UniMagContributions.Models.Faculty", b =>
                {
                    b.Property<Guid>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            FacultyId = new Guid("52b9ef2e-0e06-4443-8ec7-b008a0ffd30b"),
                            Description = "Admin Description",
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("UniMagContributions.Models.Feedback", b =>
                {
                    b.Property<Guid>("FeedBackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ContributionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FeedBackId");

                    b.HasIndex("ContributionId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("UniMagContributions.Models.FileDetails", b =>
                {
                    b.Property<Guid>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContributionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.HasKey("FileId");

                    b.HasIndex("ContributionId");

                    b.ToTable("FileDetails");
                });

            modelBuilder.Entity("UniMagContributions.Models.ImageDetails", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContributionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("ContributionId");

                    b.ToTable("ImageDetails");
                });

            modelBuilder.Entity("UniMagContributions.Models.Notification", b =>
                {
                    b.Property<Guid>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ContributionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NotificationId");

                    b.HasIndex("ContributionId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("UniMagContributions.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("9d614c5e-4437-4ddb-a3e2-ac9be01b2dfd"),
                            Name = "Administrator"
                        },
                        new
                        {
                            RoleId = new Guid("809b08ec-295e-49e6-874b-468a0f2ecc24"),
                            Name = "Manager"
                        },
                        new
                        {
                            RoleId = new Guid("c2ebbb18-4c62-4b01-bddb-7e77d95f7400"),
                            Name = "Coordinator"
                        },
                        new
                        {
                            RoleId = new Guid("562d51af-33c7-4575-85b9-32be2e2f99ca"),
                            Name = "Student"
                        });
                });

            modelBuilder.Entity("UniMagContributions.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UniMagContributions.Models.Contribution", b =>
                {
                    b.HasOne("UniMagContributions.Models.AnnualMagazine", "AnnualMagazine")
                        .WithMany("Contributions")
                        .HasForeignKey("AnnualMagazineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniMagContributions.Models.User", "User")
                        .WithMany("Contributions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnualMagazine");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniMagContributions.Models.Feedback", b =>
                {
                    b.HasOne("UniMagContributions.Models.Contribution", "Contribution")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ContributionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UniMagContributions.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contribution");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniMagContributions.Models.FileDetails", b =>
                {
                    b.HasOne("UniMagContributions.Models.Contribution", "Contribution")
                        .WithMany("FileDetails")
                        .HasForeignKey("ContributionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contribution");
                });

            modelBuilder.Entity("UniMagContributions.Models.ImageDetails", b =>
                {
                    b.HasOne("UniMagContributions.Models.Contribution", "Contribution")
                        .WithMany("ImageDetails")
                        .HasForeignKey("ContributionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contribution");
                });

            modelBuilder.Entity("UniMagContributions.Models.Notification", b =>
                {
                    b.HasOne("UniMagContributions.Models.Contribution", "Contribution")
                        .WithMany("Notifications")
                        .HasForeignKey("ContributionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UniMagContributions.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contribution");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniMagContributions.Models.User", b =>
                {
                    b.HasOne("UniMagContributions.Models.Faculty", "Faculty")
                        .WithMany("Users")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniMagContributions.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("UniMagContributions.Models.AnnualMagazine", b =>
                {
                    b.Navigation("Contributions");
                });

            modelBuilder.Entity("UniMagContributions.Models.Contribution", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("FileDetails");

                    b.Navigation("ImageDetails");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("UniMagContributions.Models.Faculty", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("UniMagContributions.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("UniMagContributions.Models.User", b =>
                {
                    b.Navigation("Contributions");

                    b.Navigation("Feedbacks");

                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
