version: '3.8'

services:
  test-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: unless-stopped
    environment:
      SA_PASSWORD: "ThreeTiger@2024"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "5000:1433"
    volumes:
      - sql-server-data-test:/var/opt/mssql
    networks:
      - unimag-network

  sql-server:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: unless-stopped
    environment:
      SA_PASSWORD: "ThreeTiger@2024"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    volumes:
      - sql-server-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ThreeTiger@2024 -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    networks:
      - unimag-network

  sql-server.configurator:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      sql-server:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S sql-server -U sa -P ThreeTiger@2024 -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!";
      '
    networks:
        - unimag-network

volumes:
  sql-server-data:
  sql-server-data-test:

networks:
  unimag-network:
    driver: bridge
